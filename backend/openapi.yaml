openapi: 3.0.0
info:
  title: Sandwich Shop API
  description: REST API dokumentacija za Sandwich Shop
  version: 1.0.0

servers:
  - url: http://localhost/EmirGasi/Project-Introduction-to-Web-Programming/backend

paths:
  /products:
    get:
      tags: [Products]
      summary: Vrati sve proizvode
      responses:
        '200':
          description: Lista proizvoda
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Product' }
    post:
      tags: [Products]
      summary: Dodaj novi proizvod
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Product' }
      responses:
        '200':
          description: Proizvod dodan
  /products/{id}:
    get:
      tags: [Products]
      summary: Vrati proizvod po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalji proizvoda
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Product' }
    put:
      tags: [Products]
      summary: Ažuriraj proizvod
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Product' }
      responses:
        '200':
          description: Proizvod ažuriran
    delete:
      tags: [Products]
      summary: Obriši proizvod
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Proizvod obrisan

  /users:
    get:
      tags: [Users]
      summary: Vrati sve korisnike
      responses:
        '200':
          description: Lista korisnika
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/User' }
    post:
      tags: [Users]
      summary: Dodaj korisnika
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/User' }
      responses:
        '200':
          description: Korisnik dodat
  /users/{id}:
    get:
      tags: [Users]
      summary: Vrati korisnika po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalji korisnika
          content:
            application/json:
              schema: { $ref: '#/components/schemas/User' }
    put:
      tags: [Users]
      summary: Ažuriraj korisnika
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/User' }
      responses:
        '200':
          description: Korisnik ažuriran
    delete:
      tags: [Users]
      summary: Obriši korisnika
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Korisnik obrisan

  /orders:
    get:
      tags: [Orders]
      summary: Vrati sve narudžbe
      responses:
        '200':
          description: Lista narudžbi
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Order' }
    post:
      tags: [Orders]
      summary: Dodaj narudžbu
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Order' }
      responses:
        '200':
          description: Narudžba dodana
  /orders/{id}:
    get:
      tags: [Orders]
      summary: Vrati narudžbu po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalji narudžbe
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Order' }
    put:
      tags: [Orders]
      summary: Ažuriraj narudžbu
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Order' }
      responses:
        '200':
          description: Narudžba ažurirana
    delete:
      tags: [Orders]
      summary: Obriši narudžbu
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Narudžba obrisana

  /order-items:
    get:
      tags: [OrderItems]
      summary: Vrati sve stavke narudžbi
      responses:
        '200':
          description: Lista stavki
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/OrderItem' }
    post:
      tags: [OrderItems]
      summary: Dodaj stavku narudžbe
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/OrderItem' }
      responses:
        '200':
          description: Stavka dodana
  /order-items/{id}:
    get:
      tags: [OrderItems]
      summary: Vrati stavku po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalji stavke
          content:
            application/json:
              schema: { $ref: '#/components/schemas/OrderItem' }
    put:
      tags: [OrderItems]
      summary: Ažuriraj stavku
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/OrderItem' }
      responses:
        '200':
          description: Stavka ažurirana
    delete:
      tags: [OrderItems]
      summary: Obriši stavku
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Stavka obrisana

  /categories:
    get:
      tags: [Categories]
      summary: Vrati sve kategorije
      responses:
        '200':
          description: Lista kategorija
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Category' }
    post:
      tags: [Categories]
      summary: Dodaj kategoriju
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Category' }
      responses:
        '200':
          description: Kategorija dodana
  /categories/{id}:
    get:
      tags: [Categories]
      summary: Vrati kategoriju po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalji kategorije
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Category' }
    put:
      tags: [Categories]
      summary: Ažuriraj kategoriju
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Category' }
      responses:
        '200':
          description: Kategorija ažurirana
    delete:
      tags: [Categories]
      summary: Obriši kategoriju
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Kategorija obrisana

  /payments:
    get:
      tags: [Payments]
      summary: Vrati sve uplate
      responses:
        '200':
          description: Lista uplata
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Payment' }
    post:
      tags: [Payments]
      summary: Dodaj uplatu
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '#/components/schemas/Payment' }
      responses:
        '200':
          description: Uplata dodana

components:
  schemas:
    Product:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        description: { type: string }
        price: { type: number }
        category_id: { type: integer }

    User:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        email: { type: string }
        password: { type: string }
        role: { type: string }

    Order:
      type: object
      properties:
        id: { type: integer }
        user_id: { type: integer }
        total_price: { type: number }
        status: { type: string }

    OrderItem:
      type: object
      properties:
        id: { type: integer }
        order_id: { type: integer }
        product_id: { type: integer }
        quantity: { type: integer }
        price: { type: number }

    Category:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        description: { type: string }

    Payment:
      type: object
      properties:
        id: { type: integer }
        order_id: { type: integer }
        amount: { type: number }
        method: { type: string }
